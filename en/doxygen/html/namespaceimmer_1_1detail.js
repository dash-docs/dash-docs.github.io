var namespaceimmer_1_1detail =
[
    [ "arrays", "namespaceimmer_1_1detail_1_1arrays.html", "namespaceimmer_1_1detail_1_1arrays" ],
    [ "csl", "namespaceimmer_1_1detail_1_1csl.html", "namespaceimmer_1_1detail_1_1csl" ],
    [ "dvektor", "namespaceimmer_1_1detail_1_1dvektor.html", "namespaceimmer_1_1detail_1_1dvektor" ],
    [ "hamts", "namespaceimmer_1_1detail_1_1hamts.html", "namespaceimmer_1_1detail_1_1hamts" ],
    [ "rbts", "namespaceimmer_1_1detail_1_1rbts.html", "namespaceimmer_1_1detail_1_1rbts" ],
    [ "swappable", "namespaceimmer_1_1detail_1_1swappable.html", "namespaceimmer_1_1detail_1_1swappable" ],
    [ "combine_standard_layout", "structimmer_1_1detail_1_1combine__standard__layout.html", "structimmer_1_1detail_1_1combine__standard__layout" ],
    [ "compatible_sentinel", "structimmer_1_1detail_1_1compatible__sentinel.html", null ],
    [ "compatible_sentinel< T, U, std::enable_if_t< is_iterator_v< T > &&is_equality_comparable_v< T, U > &&is_inequality_comparable_v< T, U > > >", "structimmer_1_1detail_1_1compatible__sentinel_3_01_t_00_01_u_00_01std_1_1enable__if__t_3_01is__i033e00f8e09a69ec5a50a3c85954f36d.html", null ],
    [ "constantly", "structimmer_1_1detail_1_1constantly.html", "structimmer_1_1detail_1_1constantly" ],
    [ "empty_t", "structimmer_1_1detail_1_1empty__t.html", null ],
    [ "exact_t", "structimmer_1_1detail_1_1exact__t.html", "structimmer_1_1detail_1_1exact__t" ],
    [ "gc_atom_impl", "structimmer_1_1detail_1_1gc__atom__impl.html", "structimmer_1_1detail_1_1gc__atom__impl" ],
    [ "is_dereferenceable", "structimmer_1_1detail_1_1is__dereferenceable.html", null ],
    [ "is_dereferenceable< T, void_t< decltype(*(std::declval< T & >()))> >", "structimmer_1_1detail_1_1is__dereferenceable_3_01_t_00_01void__t_3_01decltype_07_5_07std_1_1decldc20d022b5674feb4382fed555e97cf1.html", null ],
    [ "is_equality_comparable", "structimmer_1_1detail_1_1is__equality__comparable.html", null ],
    [ "is_equality_comparable< T, U, std::enable_if_t< std::is_same< bool, decltype(std::declval< T & >()==std::declval< U & >())>::value > >", "structimmer_1_1detail_1_1is__equality__comparable_3_01_t_00_01_u_00_01std_1_1enable__if__t_3_01sc7e6f25e0d7450cbd0ea7ed70d3f29ef.html", null ],
    [ "is_forward_iterator", "structimmer_1_1detail_1_1is__forward__iterator.html", null ],
    [ "is_forward_iterator< T, std::enable_if_t< is_iterator_v< T > &&std::is_base_of< std::forward_iterator_tag, typename std::iterator_traits< T >::iterator_category >::value > >", "structimmer_1_1detail_1_1is__forward__iterator_3_01_t_00_01std_1_1enable__if__t_3_01is__iterator5c7da7e4b8caf91c4be57fc7ffa2a40d.html", null ],
    [ "is_inequality_comparable", "structimmer_1_1detail_1_1is__inequality__comparable.html", null ],
    [ "is_inequality_comparable< T, U, std::enable_if_t< std::is_same< bool, decltype(std::declval< T & >() !=std::declval< U & >())>::value > >", "structimmer_1_1detail_1_1is__inequality__comparable_3_01_t_00_01_u_00_01std_1_1enable__if__t_3_0d3175b6cbde7985fa3cac227fe63a4d6.html", null ],
    [ "is_iterator", "structimmer_1_1detail_1_1is__iterator.html", null ],
    [ "is_iterator< T, void_t< std::enable_if_t< is_preincrementable_v< T > &&is_dereferenceable_v< T > &&std::is_copy_constructible< T >::value &&std::is_copy_assignable< T >::value &&std::is_destructible< T >::value &&is_swappable_v< T > >, typename std::iterator_traits< T >::value_type, typename std::iterator_traits< T >::difference_type, typename std::iterator_traits< T >::reference, typename std::iterator_traits< T >::pointer, typename std::iterator_traits< T >::iterator_category > >", "structimmer_1_1detail_1_1is__iterator_3_01_t_00_01void__t_3_01std_1_1enable__if__t_3_01is__prein6dea9e3355b015bcce90c337682bb393.html", null ],
    [ "is_preincrementable", "structimmer_1_1detail_1_1is__preincrementable.html", null ],
    [ "is_preincrementable< T, std::enable_if_t< std::is_same< T &, decltype(++(std::declval< T & >()))>::value > >", "structimmer_1_1detail_1_1is__preincrementable_3_01_t_00_01std_1_1enable__if__t_3_01std_1_1is__sa73ac61c0458c17d9c50b881635924578.html", null ],
    [ "is_subtractable", "structimmer_1_1detail_1_1is__subtractable.html", null ],
    [ "is_subtractable< T, U, void_t< decltype(std::declval< T & >() - std::declval< U & >())> >", "structimmer_1_1detail_1_1is__subtractable_3_01_t_00_01_u_00_01void__t_3_01decltype_07std_1_1decl0ca706cdca0d8569dfa0c0fc6185d013.html", null ],
    [ "iterator_core_access", "structimmer_1_1detail_1_1iterator__core__access.html", "structimmer_1_1detail_1_1iterator__core__access" ],
    [ "iterator_facade", "classimmer_1_1detail_1_1iterator__facade.html", "classimmer_1_1detail_1_1iterator__facade" ],
    [ "make_void", "structimmer_1_1detail_1_1make__void.html", "structimmer_1_1detail_1_1make__void" ],
    [ "not_supported_t", "structimmer_1_1detail_1_1not__supported__t.html", null ],
    [ "ref_count_base", "structimmer_1_1detail_1_1ref__count__base.html", "structimmer_1_1detail_1_1ref__count__base" ],
    [ "refcount_atom_impl", "structimmer_1_1detail_1_1refcount__atom__impl.html", "structimmer_1_1detail_1_1refcount__atom__impl" ],
    [ "std_distance_supports", "structimmer_1_1detail_1_1std__distance__supports.html", null ],
    [ "std_distance_supports< T, U, void_t< decltype(std::distance(std::declval< T >(), std::declval< U >()))> >", "structimmer_1_1detail_1_1std__distance__supports_3_01_t_00_01_u_00_01void__t_3_01decltype_07std_772177665e15dec580dfc215da5c3652.html", null ],
    [ "std_uninitialized_copy_supports", "structimmer_1_1detail_1_1std__uninitialized__copy__supports.html", null ],
    [ "std_uninitialized_copy_supports< T, U, V, void_t< decltype(std::uninitialized_copy(std::declval< T >(), std::declval< U >(), std::declval< V >()))> >", "structimmer_1_1detail_1_1std__uninitialized__copy__supports_3_01_t_00_01_u_00_01_v_00_01void__t_df4d041842b81f84da4bc85b4ab681d3.html", null ],
    [ "thread_local_free_list_storage", "structimmer_1_1detail_1_1thread__local__free__list__storage.html", "structimmer_1_1detail_1_1thread__local__free__list__storage" ],
    [ "unsafe_free_list_heap_impl", "classimmer_1_1detail_1_1unsafe__free__list__heap__impl.html", "classimmer_1_1detail_1_1unsafe__free__list__heap__impl" ],
    [ "unsafe_free_list_storage", "structimmer_1_1detail_1_1unsafe__free__list__storage.html", "structimmer_1_1detail_1_1unsafe__free__list__storage" ]
];