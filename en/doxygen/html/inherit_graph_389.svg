<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.38.0 (20140413.2041)
 -->
<!-- Title: Graphical Class Hierarchy Pages: 1 -->
<svg width="375pt" height="1248pt"
 viewBox="0.00 0.00 375.00 1248.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1244)">
<title>Graphical Class Hierarchy</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-1244 371,-1244 371,4 -4,4"/>
<!-- Node133 -->
<g id="node1" class="node"><title>Node133</title>
<polygon fill="white" stroke="#bfbfbf" points="0,-503 0,-522 62,-522 62,-503 0,-503"/>
<text text-anchor="middle" x="31" y="-510" font-family="Helvetica,sans-Serif" font-size="10.00">true_type</text>
</g>
<!-- Node0 -->
<g id="node2" class="node"><title>Node0</title>
<g id="a_node2"><a xlink:href="structimmer_1_1detail_1_1compatible__sentinel_3_01_t_00_01_u_00_01std_1_1enable__if__t_3_01is__i033e00f8e09a69ec5a50a3c85954f36d.html" target="_top" xlink:title="immer::detail::compatible\l_sentinel\&lt; T, U, std::enable\l_if_t\&lt; is_iterator_v\&lt; T \&gt; &amp;&amp;is\l_equality_comparable_v\&lt; T, U \&gt;\l &amp;&amp;is_inequality_comparable_v\&lt;\l T, U \&gt; \&gt; \&gt;">
<polygon fill="white" stroke="black" points="144.5,-1165.5 144.5,-1239.5 320.5,-1239.5 320.5,-1165.5 144.5,-1165.5"/>
<text text-anchor="start" x="152.5" y="-1227.5" font-family="Helvetica,sans-Serif" font-size="10.00">immer::detail::compatible</text>
<text text-anchor="start" x="152.5" y="-1216.5" font-family="Helvetica,sans-Serif" font-size="10.00">_sentinel&lt; T, U, std::enable</text>
<text text-anchor="start" x="152.5" y="-1205.5" font-family="Helvetica,sans-Serif" font-size="10.00">_if_t&lt; is_iterator_v&lt; T &gt; &amp;&amp;is</text>
<text text-anchor="start" x="152.5" y="-1194.5" font-family="Helvetica,sans-Serif" font-size="10.00">_equality_comparable_v&lt; T, U &gt;</text>
<text text-anchor="start" x="152.5" y="-1183.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;&amp;is_inequality_comparable_v&lt;</text>
<text text-anchor="middle" x="232.5" y="-1172.5" font-family="Helvetica,sans-Serif" font-size="10.00"> T, U &gt; &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node133&#45;&gt;Node0 -->
<g id="edge1" class="edge"><title>Node133&#45;&gt;Node0</title>
<path fill="none" stroke="midnightblue" d="M32.7825,-532.5C36.9911,-635.834 58.2385,-1106.37 98,-1156.5 109.73,-1171.29 126.481,-1181.34 144.172,-1188.17"/>
<polygon fill="midnightblue" stroke="midnightblue" points="36.2688,-532.086 32.3717,-522.234 29.2744,-532.366 36.2688,-532.086"/>
</g>
<!-- Node135 -->
<g id="node3" class="node"><title>Node135</title>
<g id="a_node3"><a xlink:href="structimmer_1_1detail_1_1is__dereferenceable_3_01_t_00_01void__t_3_01decltype_07_5_07std_1_1decldc20d022b5674feb4382fed555e97cf1.html" target="_top" xlink:title="immer::detail::is_dereferenceable\l\&lt; T, void_t\&lt; decltype(*(std\l::declval\&lt; T &amp; \&gt;()))\&gt; \&gt;">
<polygon fill="white" stroke="black" points="144,-1106 144,-1147 321,-1147 321,-1106 144,-1106"/>
<text text-anchor="start" x="152" y="-1135" font-family="Helvetica,sans-Serif" font-size="10.00">immer::detail::is_dereferenceable</text>
<text text-anchor="start" x="152" y="-1124" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T, void_t&lt; decltype(*(std</text>
<text text-anchor="middle" x="232.5" y="-1113" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; T &amp; &gt;()))&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node133&#45;&gt;Node135 -->
<g id="edge2" class="edge"><title>Node133&#45;&gt;Node135</title>
<path fill="none" stroke="midnightblue" d="M32.8938,-532.561C37.4322,-630.405 59.2405,-1054.59 98,-1097.5 110.003,-1110.79 126.538,-1118.76 143.887,-1123.4"/>
<polygon fill="midnightblue" stroke="midnightblue" points="36.3776,-532.124 32.4259,-522.294 29.3849,-532.443 36.3776,-532.124"/>
</g>
<!-- Node136 -->
<g id="node4" class="node"><title>Node136</title>
<g id="a_node4"><a xlink:href="structimmer_1_1detail_1_1is__equality__comparable_3_01_t_00_01_u_00_01std_1_1enable__if__t_3_01sc7e6f25e0d7450cbd0ea7ed70d3f29ef.html" target="_top" xlink:title="immer::detail::is_equality\l_comparable\&lt; T, U, std::\lenable_if_t\&lt; std::is_same\l\&lt; bool, decltype(std::declval\l\&lt; T &amp; \&gt;()==std::declval\&lt; U &amp;\l \&gt;())\&gt;::value \&gt; \&gt;">
<polygon fill="white" stroke="black" points="150.5,-1013.5 150.5,-1087.5 314.5,-1087.5 314.5,-1013.5 150.5,-1013.5"/>
<text text-anchor="start" x="158.5" y="-1075.5" font-family="Helvetica,sans-Serif" font-size="10.00">immer::detail::is_equality</text>
<text text-anchor="start" x="158.5" y="-1064.5" font-family="Helvetica,sans-Serif" font-size="10.00">_comparable&lt; T, U, std::</text>
<text text-anchor="start" x="158.5" y="-1053.5" font-family="Helvetica,sans-Serif" font-size="10.00">enable_if_t&lt; std::is_same</text>
<text text-anchor="start" x="158.5" y="-1042.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; bool, decltype(std::declval</text>
<text text-anchor="start" x="158.5" y="-1031.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &amp; &gt;()==std::declval&lt; U &amp;</text>
<text text-anchor="middle" x="232.5" y="-1020.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;())&gt;::value &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node133&#45;&gt;Node136 -->
<g id="edge3" class="edge"><title>Node133&#45;&gt;Node136</title>
<path fill="none" stroke="midnightblue" d="M31.9759,-532.252C32.2654,-614.691 37.3764,-930.469 98,-1004.5 111.28,-1020.72 130.58,-1031.23 150.398,-1038.05"/>
<polygon fill="midnightblue" stroke="midnightblue" points="35.4759,-532.212 31.9617,-522.217 28.4759,-532.222 35.4759,-532.212"/>
</g>
<!-- Node137 -->
<g id="node5" class="node"><title>Node137</title>
<g id="a_node5"><a xlink:href="structimmer_1_1detail_1_1is__forward__iterator_3_01_t_00_01std_1_1enable__if__t_3_01is__iterator5c7da7e4b8caf91c4be57fc7ffa2a40d.html" target="_top" xlink:title="immer::detail::is_forward\l_iterator\&lt; T, std::enable\l_if_t\&lt; is_iterator_v\&lt; T \&gt;\l &amp;&amp;std::is_base_of\&lt; std::forward\l_iterator_tag, typename std::iterator\l_traits\&lt; T \&gt;::iterator_category \&gt;::value \&gt; \&gt;">
<polygon fill="white" stroke="black" points="118.5,-920.5 118.5,-994.5 346.5,-994.5 346.5,-920.5 118.5,-920.5"/>
<text text-anchor="start" x="126.5" y="-982.5" font-family="Helvetica,sans-Serif" font-size="10.00">immer::detail::is_forward</text>
<text text-anchor="start" x="126.5" y="-971.5" font-family="Helvetica,sans-Serif" font-size="10.00">_iterator&lt; T, std::enable</text>
<text text-anchor="start" x="126.5" y="-960.5" font-family="Helvetica,sans-Serif" font-size="10.00">_if_t&lt; is_iterator_v&lt; T &gt;</text>
<text text-anchor="start" x="126.5" y="-949.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;&amp;std::is_base_of&lt; std::forward</text>
<text text-anchor="start" x="126.5" y="-938.5" font-family="Helvetica,sans-Serif" font-size="10.00">_iterator_tag, typename std::iterator</text>
<text text-anchor="middle" x="232.5" y="-927.5" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; T &gt;::iterator_category &gt;::value &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node133&#45;&gt;Node137 -->
<g id="edge4" class="edge"><title>Node133&#45;&gt;Node137</title>
<path fill="none" stroke="midnightblue" d="M32.6916,-532.468C35.5836,-604.82 48.9453,-852.06 98,-910.5 103.845,-917.463 110.789,-923.396 118.393,-928.45"/>
<polygon fill="midnightblue" stroke="midnightblue" points="36.1741,-531.935 32.3016,-522.073 29.1791,-532.197 36.1741,-531.935"/>
</g>
<!-- Node138 -->
<g id="node6" class="node"><title>Node138</title>
<g id="a_node6"><a xlink:href="structimmer_1_1detail_1_1is__inequality__comparable_3_01_t_00_01_u_00_01std_1_1enable__if__t_3_0d3175b6cbde7985fa3cac227fe63a4d6.html" target="_top" xlink:title="immer::detail::is_inequality\l_comparable\&lt; T, U, std::enable\l_if_t\&lt; std::is_same\&lt; bool, decltype\l(std::declval\&lt; T &amp; \&gt;() !=std::declval\l\&lt; U &amp; \&gt;())\&gt;::value \&gt; \&gt;">
<polygon fill="white" stroke="black" points="137.5,-838 137.5,-901 327.5,-901 327.5,-838 137.5,-838"/>
<text text-anchor="start" x="145.5" y="-889" font-family="Helvetica,sans-Serif" font-size="10.00">immer::detail::is_inequality</text>
<text text-anchor="start" x="145.5" y="-878" font-family="Helvetica,sans-Serif" font-size="10.00">_comparable&lt; T, U, std::enable</text>
<text text-anchor="start" x="145.5" y="-867" font-family="Helvetica,sans-Serif" font-size="10.00">_if_t&lt; std::is_same&lt; bool, decltype</text>
<text text-anchor="start" x="145.5" y="-856" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &amp; &gt;() !=std::declval</text>
<text text-anchor="middle" x="232.5" y="-845" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; U &amp; &gt;())&gt;::value &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node133&#45;&gt;Node138 -->
<g id="edge5" class="edge"><title>Node133&#45;&gt;Node138</title>
<path fill="none" stroke="midnightblue" d="M33.5398,-532.318C38.7581,-594.518 57.7382,-784.349 98,-828.5 108.619,-840.145 122.452,-848.519 137.183,-854.534"/>
<polygon fill="midnightblue" stroke="midnightblue" points="37.0205,-531.937 32.7235,-522.253 30.0434,-532.503 37.0205,-531.937"/>
</g>
<!-- Node139 -->
<g id="node7" class="node"><title>Node139</title>
<g id="a_node7"><a xlink:href="structimmer_1_1detail_1_1is__iterator_3_01_t_00_01void__t_3_01std_1_1enable__if__t_3_01is__prein6dea9e3355b015bcce90c337682bb393.html" target="_top" xlink:title="immer::detail::is_iterator\l\&lt; T, void_t\&lt; std::enable\l_if_t\&lt; is_preincrementable\l_v\&lt; T \&gt; &amp;&amp;is_dereferenceable\l_v\&lt; T \&gt; &amp;&amp;std::is_copy_constructible\l\&lt; T \&gt;::value &amp;&amp;std::is_copy_assignable\l\&lt; T \&gt;::value &amp;&amp;std::is_destructible\&lt;\l T \&gt;::value &amp;&amp;is_swappable_v\&lt; T \&gt; \&gt;, typename\l std::iterator_traits\&lt; T \&gt;::value_type, typename\l std::iterator_traits\&lt; T \&gt;::difference_type, typename\l std::iterator_traits\&lt; T \&gt;::reference, typename std\l::iterator_traits\&lt; T \&gt;::pointer, typename std::iterator\l_traits\&lt; T \&gt;::iterator_category \&gt; \&gt;">
<polygon fill="white" stroke="black" points="98,-668 98,-819 367,-819 367,-668 98,-668"/>
<text text-anchor="start" x="106" y="-807" font-family="Helvetica,sans-Serif" font-size="10.00">immer::detail::is_iterator</text>
<text text-anchor="start" x="106" y="-796" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T, void_t&lt; std::enable</text>
<text text-anchor="start" x="106" y="-785" font-family="Helvetica,sans-Serif" font-size="10.00">_if_t&lt; is_preincrementable</text>
<text text-anchor="start" x="106" y="-774" font-family="Helvetica,sans-Serif" font-size="10.00">_v&lt; T &gt; &amp;&amp;is_dereferenceable</text>
<text text-anchor="start" x="106" y="-763" font-family="Helvetica,sans-Serif" font-size="10.00">_v&lt; T &gt; &amp;&amp;std::is_copy_constructible</text>
<text text-anchor="start" x="106" y="-752" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &gt;::value &amp;&amp;std::is_copy_assignable</text>
<text text-anchor="start" x="106" y="-741" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &gt;::value &amp;&amp;std::is_destructible&lt;</text>
<text text-anchor="start" x="106" y="-730" font-family="Helvetica,sans-Serif" font-size="10.00"> T &gt;::value &amp;&amp;is_swappable_v&lt; T &gt; &gt;, typename</text>
<text text-anchor="start" x="106" y="-719" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; T &gt;::value_type, typename</text>
<text text-anchor="start" x="106" y="-708" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; T &gt;::difference_type, typename</text>
<text text-anchor="start" x="106" y="-697" font-family="Helvetica,sans-Serif" font-size="10.00"> std::iterator_traits&lt; T &gt;::reference, typename std</text>
<text text-anchor="start" x="106" y="-686" font-family="Helvetica,sans-Serif" font-size="10.00">::iterator_traits&lt; T &gt;::pointer, typename std::iterator</text>
<text text-anchor="middle" x="232.5" y="-675" font-family="Helvetica,sans-Serif" font-size="10.00">_traits&lt; T &gt;::iterator_category &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node133&#45;&gt;Node139 -->
<g id="edge6" class="edge"><title>Node133&#45;&gt;Node139</title>
<path fill="none" stroke="midnightblue" d="M36.9518,-532.127C45.3292,-562.17 64.7182,-620.106 98,-658.5 100.79,-661.718 103.731,-664.858 106.795,-667.918"/>
<polygon fill="midnightblue" stroke="midnightblue" points="40.2309,-530.839 34.2742,-522.078 33.4668,-532.642 40.2309,-530.839"/>
</g>
<!-- Node140 -->
<g id="node8" class="node"><title>Node140</title>
<g id="a_node8"><a xlink:href="structimmer_1_1detail_1_1is__preincrementable_3_01_t_00_01std_1_1enable__if__t_3_01std_1_1is__sa73ac61c0458c17d9c50b881635924578.html" target="_top" xlink:title="immer::detail::is_preincrementable\l\&lt; T, std::enable_if_t\&lt; std::\lis_same\&lt; T &amp;, decltype(++(std\l::declval\&lt; T &amp; \&gt;()))\&gt;::value \&gt; \&gt;">
<polygon fill="white" stroke="black" points="140.5,-596.5 140.5,-648.5 324.5,-648.5 324.5,-596.5 140.5,-596.5"/>
<text text-anchor="start" x="148.5" y="-636.5" font-family="Helvetica,sans-Serif" font-size="10.00">immer::detail::is_preincrementable</text>
<text text-anchor="start" x="148.5" y="-625.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T, std::enable_if_t&lt; std::</text>
<text text-anchor="start" x="148.5" y="-614.5" font-family="Helvetica,sans-Serif" font-size="10.00">is_same&lt; T &amp;, decltype(++(std</text>
<text text-anchor="middle" x="232.5" y="-603.5" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; T &amp; &gt;()))&gt;::value &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node133&#45;&gt;Node140 -->
<g id="edge7" class="edge"><title>Node133&#45;&gt;Node140</title>
<path fill="none" stroke="midnightblue" d="M43.4056,-530.803C55.0569,-547.984 74.7091,-573.131 98,-587.5 110.847,-595.426 125.456,-601.57 140.181,-606.33"/>
<polygon fill="midnightblue" stroke="midnightblue" points="46.1827,-528.655 37.7834,-522.197 40.3223,-532.483 46.1827,-528.655"/>
</g>
<!-- Node141 -->
<g id="node9" class="node"><title>Node141</title>
<g id="a_node9"><a xlink:href="structimmer_1_1detail_1_1is__subtractable_3_01_t_00_01_u_00_01void__t_3_01decltype_07std_1_1decl0ca706cdca0d8569dfa0c0fc6185d013.html" target="_top" xlink:title="immer::detail::is_subtractable\l\&lt; T, U, void_t\&lt; decltype(std\l::declval\&lt; T &amp; \&gt;() &#45; std::declval\l\&lt; U &amp; \&gt;())\&gt; \&gt;">
<polygon fill="white" stroke="black" points="149.5,-525.5 149.5,-577.5 315.5,-577.5 315.5,-525.5 149.5,-525.5"/>
<text text-anchor="start" x="157.5" y="-565.5" font-family="Helvetica,sans-Serif" font-size="10.00">immer::detail::is_subtractable</text>
<text text-anchor="start" x="157.5" y="-554.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T, U, void_t&lt; decltype(std</text>
<text text-anchor="start" x="157.5" y="-543.5" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; T &amp; &gt;() &#45; std::declval</text>
<text text-anchor="middle" x="232.5" y="-532.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; U &amp; &gt;())&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node133&#45;&gt;Node141 -->
<g id="edge8" class="edge"><title>Node133&#45;&gt;Node141</title>
<path fill="none" stroke="midnightblue" d="M72.3005,-520.378C94.3842,-524.695 122.589,-530.209 149.105,-535.393"/>
<polygon fill="midnightblue" stroke="midnightblue" points="72.7855,-516.907 62.2998,-518.423 71.4425,-523.777 72.7855,-516.907"/>
</g>
<!-- Node142 -->
<g id="node10" class="node"><title>Node142</title>
<g id="a_node10"><a xlink:href="structimmer_1_1detail_1_1std__distance__supports_3_01_t_00_01_u_00_01void__t_3_01decltype_07std_772177665e15dec580dfc215da5c3652.html" target="_top" xlink:title="immer::detail::std\l_distance_supports\&lt;\l T, U, void_t\&lt; decltype\l(std::distance(std::declval\l\&lt; T \&gt;(), std::declval\&lt; U \&gt;()))\&gt; \&gt;">
<polygon fill="white" stroke="black" points="144.5,-443 144.5,-506 320.5,-506 320.5,-443 144.5,-443"/>
<text text-anchor="start" x="152.5" y="-494" font-family="Helvetica,sans-Serif" font-size="10.00">immer::detail::std</text>
<text text-anchor="start" x="152.5" y="-483" font-family="Helvetica,sans-Serif" font-size="10.00">_distance_supports&lt;</text>
<text text-anchor="start" x="152.5" y="-472" font-family="Helvetica,sans-Serif" font-size="10.00"> T, U, void_t&lt; decltype</text>
<text text-anchor="start" x="152.5" y="-461" font-family="Helvetica,sans-Serif" font-size="10.00">(std::distance(std::declval</text>
<text text-anchor="middle" x="232.5" y="-450" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &gt;(), std::declval&lt; U &gt;()))&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node133&#45;&gt;Node142 -->
<g id="edge9" class="edge"><title>Node133&#45;&gt;Node142</title>
<path fill="none" stroke="midnightblue" d="M72.3245,-504.819C93.0771,-500.866 119.23,-495.885 144.307,-491.108"/>
<polygon fill="midnightblue" stroke="midnightblue" points="71.4682,-501.419 62.2998,-506.729 72.7781,-508.296 71.4682,-501.419"/>
</g>
<!-- Node143 -->
<g id="node11" class="node"><title>Node143</title>
<g id="a_node11"><a xlink:href="structimmer_1_1detail_1_1std__uninitialized__copy__supports_3_01_t_00_01_u_00_01_v_00_01void__t_df4d041842b81f84da4bc85b4ab681d3.html" target="_top" xlink:title="immer::detail::std\l_uninitialized_copy\l_supports\&lt; T, U, V, void\l_t\&lt; decltype(std::uninitialized\l_copy(std::declval\&lt; T \&gt;(), std\l::declval\&lt; U \&gt;(), std::declval\l\&lt; V \&gt;()))\&gt; \&gt;">
<polygon fill="white" stroke="black" points="153.5,-339 153.5,-424 311.5,-424 311.5,-339 153.5,-339"/>
<text text-anchor="start" x="161.5" y="-412" font-family="Helvetica,sans-Serif" font-size="10.00">immer::detail::std</text>
<text text-anchor="start" x="161.5" y="-401" font-family="Helvetica,sans-Serif" font-size="10.00">_uninitialized_copy</text>
<text text-anchor="start" x="161.5" y="-390" font-family="Helvetica,sans-Serif" font-size="10.00">_supports&lt; T, U, V, void</text>
<text text-anchor="start" x="161.5" y="-379" font-family="Helvetica,sans-Serif" font-size="10.00">_t&lt; decltype(std::uninitialized</text>
<text text-anchor="start" x="161.5" y="-368" font-family="Helvetica,sans-Serif" font-size="10.00">_copy(std::declval&lt; T &gt;(), std</text>
<text text-anchor="start" x="161.5" y="-357" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; U &gt;(), std::declval</text>
<text text-anchor="middle" x="232.5" y="-346" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; V &gt;()))&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node133&#45;&gt;Node143 -->
<g id="edge10" class="edge"><title>Node133&#45;&gt;Node143</title>
<path fill="none" stroke="midnightblue" d="M43.3904,-494.086C55.1467,-476.417 74.9788,-450.044 98,-433.5 114.563,-421.597 134.212,-411.985 153.271,-404.416"/>
<polygon fill="midnightblue" stroke="midnightblue" points="40.193,-492.587 37.721,-502.89 46.0781,-496.377 40.193,-492.587"/>
</g>
<!-- Node144 -->
<g id="node12" class="node"><title>Node144</title>
<g id="a_node12"><a xlink:href="structimmer_1_1detail_1_1swappable_1_1with_3_01_t_00_01_u_00_01void__t_3_01decltype_07swap_07std579bd8a73585eedaea4fb37b88696364.html" target="_top" xlink:title="immer::detail::swappable\l::with\&lt; T, U, void_t\&lt; decltype\l(swap(std::declval\&lt; T &amp; \&gt;(),\l std::declval\&lt; U &amp; \&gt;())), decltype\l(swap(std::declval\&lt; U &amp; \&gt;(), std\l::declval\&lt; T &amp; \&gt;()))\&gt; \&gt;">
<polygon fill="white" stroke="black" points="144.5,-245.5 144.5,-319.5 320.5,-319.5 320.5,-245.5 144.5,-245.5"/>
<text text-anchor="start" x="152.5" y="-307.5" font-family="Helvetica,sans-Serif" font-size="10.00">immer::detail::swappable</text>
<text text-anchor="start" x="152.5" y="-296.5" font-family="Helvetica,sans-Serif" font-size="10.00">::with&lt; T, U, void_t&lt; decltype</text>
<text text-anchor="start" x="152.5" y="-285.5" font-family="Helvetica,sans-Serif" font-size="10.00">(swap(std::declval&lt; T &amp; &gt;(),</text>
<text text-anchor="start" x="152.5" y="-274.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::declval&lt; U &amp; &gt;())), decltype</text>
<text text-anchor="start" x="152.5" y="-263.5" font-family="Helvetica,sans-Serif" font-size="10.00">(swap(std::declval&lt; U &amp; &gt;(), std</text>
<text text-anchor="middle" x="232.5" y="-252.5" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; T &amp; &gt;()))&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node133&#45;&gt;Node144 -->
<g id="edge11" class="edge"><title>Node133&#45;&gt;Node144</title>
<path fill="none" stroke="midnightblue" d="M33.6742,-492.543C37.8429,-455.381 51.9425,-375.208 98,-329.5 110.819,-316.778 127.282,-307.488 144.239,-300.706"/>
<polygon fill="midnightblue" stroke="midnightblue" points="30.1799,-492.313 32.6749,-502.61 37.1457,-493.005 30.1799,-492.313"/>
</g>
<!-- Node145 -->
<g id="node13" class="node"><title>Node145</title>
<g id="a_node13"><a xlink:href="structis__serializable__enum_3_01_consensus_1_1_l_l_m_q_type_01_4.html" target="_top" xlink:title="is_serializable_enum\l\&lt; Consensus::LLMQType \&gt;">
<polygon fill="white" stroke="black" points="160,-196.5 160,-226.5 305,-226.5 305,-196.5 160,-196.5"/>
<text text-anchor="start" x="168" y="-214.5" font-family="Helvetica,sans-Serif" font-size="10.00">is_serializable_enum</text>
<text text-anchor="middle" x="232.5" y="-203.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; Consensus::LLMQType &gt;</text>
</a>
</g>
</g>
<!-- Node133&#45;&gt;Node145 -->
<g id="edge12" class="edge"><title>Node133&#45;&gt;Node145</title>
<path fill="none" stroke="midnightblue" d="M33.9945,-492.447C40.1142,-435.087 60.5194,-272.166 98,-236.5 114.484,-220.814 137.51,-213.401 159.804,-210.254"/>
<polygon fill="midnightblue" stroke="midnightblue" points="30.4791,-492.417 32.9322,-502.724 37.442,-493.137 30.4791,-492.417"/>
</g>
<!-- Node146 -->
<g id="node14" class="node"><title>Node146</title>
<g id="a_node14"><a xlink:href="structis__serializable__enum_3_01_pool_message_01_4.html" target="_top" xlink:title="is_serializable_enum\l\&lt; PoolMessage \&gt;">
<polygon fill="white" stroke="black" points="174.5,-147.5 174.5,-177.5 290.5,-177.5 290.5,-147.5 174.5,-147.5"/>
<text text-anchor="start" x="182.5" y="-165.5" font-family="Helvetica,sans-Serif" font-size="10.00">is_serializable_enum</text>
<text text-anchor="middle" x="232.5" y="-154.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; PoolMessage &gt;</text>
</a>
</g>
</g>
<!-- Node133&#45;&gt;Node146 -->
<g id="edge13" class="edge"><title>Node133&#45;&gt;Node146</title>
<path fill="none" stroke="midnightblue" d="M33.2204,-492.348C37.5244,-428.235 54.1695,-230.668 98,-187.5 117.824,-167.976 147.737,-161.139 174.226,-159.441"/>
<polygon fill="midnightblue" stroke="midnightblue" points="29.7038,-492.495 32.5566,-502.698 36.6895,-492.943 29.7038,-492.495"/>
</g>
<!-- Node147 -->
<g id="node15" class="node"><title>Node147</title>
<g id="a_node15"><a xlink:href="structis__serializable__enum_3_01_pool_state_01_4.html" target="_top" xlink:title="is_serializable_enum\l\&lt; PoolState \&gt;">
<polygon fill="white" stroke="black" points="174.5,-98.5 174.5,-128.5 290.5,-128.5 290.5,-98.5 174.5,-98.5"/>
<text text-anchor="start" x="182.5" y="-116.5" font-family="Helvetica,sans-Serif" font-size="10.00">is_serializable_enum</text>
<text text-anchor="middle" x="232.5" y="-105.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; PoolState &gt;</text>
</a>
</g>
</g>
<!-- Node133&#45;&gt;Node147 -->
<g id="edge14" class="edge"><title>Node133&#45;&gt;Node147</title>
<path fill="none" stroke="midnightblue" d="M32.6278,-492.571C35.2544,-422.556 47.6975,-189.331 98,-138.5 117.655,-118.639 147.718,-111.808 174.343,-110.2"/>
<polygon fill="midnightblue" stroke="midnightblue" points="29.1257,-492.572 32.2755,-502.688 36.1215,-492.815 29.1257,-492.572"/>
</g>
<!-- Node148 -->
<g id="node16" class="node"><title>Node148</title>
<g id="a_node16"><a xlink:href="structis__serializable__enum_3_01_pool_status_update_01_4.html" target="_top" xlink:title="is_serializable_enum\l\&lt; PoolStatusUpdate \&gt;">
<polygon fill="white" stroke="black" points="169.5,-49.5 169.5,-79.5 295.5,-79.5 295.5,-49.5 169.5,-49.5"/>
<text text-anchor="start" x="177.5" y="-67.5" font-family="Helvetica,sans-Serif" font-size="10.00">is_serializable_enum</text>
<text text-anchor="middle" x="232.5" y="-56.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; PoolStatusUpdate &gt;</text>
</a>
</g>
</g>
<!-- Node133&#45;&gt;Node148 -->
<g id="edge15" class="edge"><title>Node133&#45;&gt;Node148</title>
<path fill="none" stroke="midnightblue" d="M32.182,-492.487C33.2987,-416.609 41.2606,-147.988 98,-89.5 116.307,-70.6291 143.992,-63.454 169.413,-61.3664"/>
<polygon fill="midnightblue" stroke="midnightblue" points="28.6768,-492.907 32.0552,-502.949 35.6763,-492.992 28.6768,-492.907"/>
</g>
<!-- Node149 -->
<g id="node17" class="node"><title>Node149</title>
<g id="a_node17"><a xlink:href="structis__serializable__enum_3_01_spork_id_01_4.html" target="_top" xlink:title="is_serializable_enum\l\&lt; SporkId \&gt;">
<polygon fill="white" stroke="black" points="174.5,-0.5 174.5,-30.5 290.5,-30.5 290.5,-0.5 174.5,-0.5"/>
<text text-anchor="start" x="182.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">is_serializable_enum</text>
<text text-anchor="middle" x="232.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; SporkId &gt;</text>
</a>
</g>
</g>
<!-- Node133&#45;&gt;Node149 -->
<g id="edge16" class="edge"><title>Node133&#45;&gt;Node149</title>
<path fill="none" stroke="midnightblue" d="M31.8235,-492.291C31.5446,-410.685 34.8241,-106.664 98,-40.5 117.378,-20.2055 147.587,-13.3766 174.371,-11.8797"/>
<polygon fill="midnightblue" stroke="midnightblue" points="28.3256,-492.683 31.8838,-502.663 35.3255,-492.643 28.3256,-492.683"/>
</g>
</g>
</svg>
