<map id="immer::detail::is_iterator&lt; T, void_t&lt; std::enable_if_t&lt; is_preincrementable_v&lt; T &gt; &amp;&amp;is_dereferenceable_v&lt; T &gt; &amp;&amp;std::is_copy_constructible&lt; T &gt;::value &amp;&amp;std::is_copy_assignable&lt; T &gt;::value &amp;&amp;std::is_destructible&lt; T &gt;::value &amp;&amp;is_swappable_v&lt; T &gt; &gt;, typename std::iterator_traits&lt; T &gt;::value_type, typename std::iterator_traits&lt; T &gt;::difference_type, typename std::iterator_traits&lt; T &gt;::reference, typename std::iterator_traits&lt; T &gt;::pointer, typename std::iterator_traits&lt; T &gt;::iterator_category &gt; &gt;" name="immer::detail::is_iterator&lt; T, void_t&lt; std::enable_if_t&lt; is_preincrementable_v&lt; T &gt; &amp;&amp;is_dereferenceable_v&lt; T &gt; &amp;&amp;std::is_copy_constructible&lt; T &gt;::value &amp;&amp;std::is_copy_assignable&lt; T &gt;::value &amp;&amp;std::is_destructible&lt; T &gt;::value &amp;&amp;is_swappable_v&lt; T &gt; &gt;, typename std::iterator_traits&lt; T &gt;::value_type, typename std::iterator_traits&lt; T &gt;::difference_type, typename std::iterator_traits&lt; T &gt;::reference, typename std::iterator_traits&lt; T &gt;::pointer, typename std::iterator_traits&lt; T &gt;::iterator_category &gt; &gt;">
</map>
